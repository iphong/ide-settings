<templateSet group="PageBuilder">
  <template name="pb:element" value="import { _, $ } from 'libs/utils'&#10;import React from 'react'&#10;import Element from 'Element'&#10;import PropTypes from 'prop-types'&#10;&#10;export default class $TYPE$ extends Element {&#10;&#9;static get parentTypes() {&#10;&#9;&#9;return super.parentTypes&#10;&#9;}&#10;&#9;static get propTypes() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.propTypes&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;static get defaultProps() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.defaultProps,&#10;&#9;&#9;&#9;tag: '$TAG$'&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;get toolbar() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.toolbar&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;get inspector() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.inspector&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;shouldComponentUpdate(nextProps, nextState) {&#10;&#9;&#9;return true&#10;&#9;}&#10;&#9;componentDidMount() {&#10;&#9;&#9;// On mounted handler&#10;&#9;}&#10;&#9;componentDidUpdate(prevProps, prevState, prevContext) {&#10;&#9;&#9;// On updated handler&#10;&#9;}&#10;&#9;render() {&#10;&#9;&#9;return (&#10;&#9;&#9;&#9;&lt;div&gt;&#10;&#9;&#9;&#9;&#9;$CONTENT$&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;)&#10;&#9;}&#10;}&#10;" description="template for page builder element" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="jsQualifiedClassName()" defaultValue="MyElement" alwaysStopAt="true" />
    <variable name="TAG" expression="lowercaseAndDash(String)" defaultValue="div" alwaysStopAt="true" />
    <variable name="CONTENT" expression="" defaultValue="Body of my element" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pb:block" value="import { _, $ } from 'libs/utils'&#10;import React from 'react'&#10;import Block from 'Element'&#10;import PropTypes from 'prop-types'&#10;&#10;export default class $TYPE$ extends Block {&#10;&#9;static get parentTypes() {&#10;&#9;&#9;return super.parentTypes&#10;&#9;}&#10;&#9;static get childTypes() {&#10;&#9;&#9;return super.childTypes&#10;&#9;}&#10;&#9;static get propTypes() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.propTypes&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;static get defaultProps() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.defaultProps,&#10;&#9;&#9;&#9;tag: '$TAG$'&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;get toolbar() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.toolbar&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;get inspector() {&#10;&#9;&#9;return {&#10;&#9;&#9;&#9;...super.inspector&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;shouldComponentUpdate(nextProps, nextState) {&#10;&#9;&#9;return super.shouldComponentUpdate(nextProps, nextState)&#10;&#9;}&#10;&#9;componentDidMount() {&#10;&#9;&#9;// On mounted handler&#10;&#9;}&#10;&#9;componentDidUpdate(prevProps, prevState, prevContext) {&#10;&#9;&#9;// On updated handler&#10;&#9;}&#10;&#9;render() {&#10;&#9;&#9;return (&#10;&#9;&#9;&#9;&lt;div&gt;&#10;&#9;&#9;&#9;&#9;{this.renderChildren()}&#10;&#9;&#9;&#9;&lt;/div&gt;&#10;&#9;&#9;)&#10;&#9;}&#10;}&#10;" description="template for page builder block" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="jsQualifiedClassName()" defaultValue="MyElement" alwaysStopAt="true" />
    <variable name="TAG" expression="lowercaseAndDash(String)" defaultValue="div" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pb:view" value="import _ from 'underscore'&#10;import $ from 'jquery'&#10;import React from 'react'&#10;import PropTypes from 'prop-types'&#10;import styled from 'styled-components'&#10;import UIView from './UIView'&#10;&#10;const $NAME$ = styled.div`&#10;&#9;&amp; {&#10;&#9;&#10;&#9;}&#10;`&#10;&#10;export default class UI$NAME$ extends UIView {&#10;&#9;static propTypes = {}&#10;&#9;static defaultProps = {}&#10;&#9;render() {&#10;&#9;&#9;return (&#10;&#9;&#9;&#9;&lt;$NAME$&gt;&#10;&#9;&#9;&#9;&#9;{this.props.children}&#10;&#9;&#9;&#9;&lt;/$NAME$&gt;&#10;&#9;&#9;)&#10;&#9;}&#10;}&#10;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>